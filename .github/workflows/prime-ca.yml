name: Build & Commit Prime LiveTV XMLTV CA via WireGuard VPN

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-livetv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Restore prime_livetv.py from secret
        env:
          PRIME_CA_B64: ${{ secrets.PRIME_CA_B64 }}
        run: |
          echo "$PRIME_CA_B64" | base64 -d > prime_livetv.py
          chmod +x prime_livetv.py
          head -20 prime_livetv.py

      - name: Run Surfshark WireGuard VPN container
        env:
          VPN_USER: ${{ secrets.SURFSHARK_USER }}
          VPN_PASS: ${{ secrets.SURFSHARK_PASS }}
        run: |
          docker run -d --name surfshark-vpn \
            --cap-add=NET_ADMIN \
            -e VPN_SERVICE_PROVIDER=surfshark \
            -e VPN_TYPE=wg \
            -e VPN_USER=$VPN_USER \
            -e VPN_PASSWORD=$VPN_PASS \
            -e WIREGUARD_COUNTRY=CA \
            -e ENABLE_IPV6=no \
            -e REGION=van \
            -e ENABLE_SPLIT_TUNNEL=no \
            -p 51820:51820/udp \
            ghcr.io/qdm12/gluetun:latest

          echo "Waiting 15 seconds for VPN to establish..."
          sleep 15
          echo "Current public IP:"
          docker exec surfshark-vpn curl -s https://ipinfo.io | grep -E "ip|country"

      - name: Build amazon_ca.xml (LiveTV)
        env:
          PV_LIVETV_URLS_CA: ${{ secrets.PV_LIVETV_URLS_CA }}
          PV_COOKIE: ${{ secrets.PV_COOKIE }}
          PV_USER_AGENT: ${{ secrets.PV_USER_AGENT }}
          PV_REFERER: ${{ secrets.PV_REFERER }}
        run: |
          set -euo pipefail

          mkdir -p data
          ARGS=( --timezone "America/Los_Angeles" --channel-id name -o data/amazon_ca.xml )

          [ -n "${PV_USER_AGENT:-}" ] && ARGS+=( --user-agent "$PV_USER_AGENT" )
          [ -n "${PV_REFERER:-}" ] && ARGS+=( --referer "$PV_REFERER" )
          [ -n "${PV_COOKIE:-}" ] && ARGS+=( --cookie "$PV_COOKIE" )

          while IFS=$'\n' read -r url; do
            [ -z "$url" ] && continue
            ARGS+=( --url "$url" )
          done <<< "$PV_LIVETV_URLS_CA"

          # Run the script inside the VPN network namespace
          docker exec surfshark-vpn python3 /github/workspace/prime_livetv.py "${ARGS[@]}"

      - name: Stop VPN container
        run: |
          docker stop surfshark-vpn
          docker rm surfshark-vpn

      - name: Create amazon_ca.xml.gz
        run: |
          gzip -9 -c data/amazon_ca.xml > data/amazon_ca.xml.gz
          ls -l data/amazon_ca.xml data/amazon_ca.xml.gz

      - name: Commit updated XMLTV files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/amazon_ca.xml data/amazon_ca.xml.gz
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update LiveTV XMLTV ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amazon-ca-livetv-xmltv
          path: |
            data/amazon_ca.xml
            data/amazon_ca.xml.gz
