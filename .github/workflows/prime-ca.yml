name: Build & Commit Prime LiveTV XMLTV CA

on:
  schedule:
    - cron: '0 */4 * * *'  # Every 4 hours UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-livetv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Restore prime_livetv.py from secret
        env:
          PRIME_CA_B64: ${{ secrets.PRIME_CA_B64 }}
        run: |
          echo "$PRIME_CA_B64" | base64 -d > prime_livetv.py
          chmod +x prime_livetv.py
          head -20 prime_livetv.py

      - name: Build amazon.xml (LiveTV)
        env:
          PV_LIVETV_URLS_CA: ${{ secrets.PV_LIVETV_URLS_CA }}
          PV_COOKIE: ${{ secrets.PV_COOKIE }}
          PV_USER_AGENT: ${{ secrets.PV_USER_AGENT }}
          PV_REFERER: ${{ secrets.PV_REFERER }}
          PV_CA_PROXY: http://6eGY59ep9wtgPEDLKULJTLnV:uBnYSJM2mNFcWuTkHDprSZEt@ca-van.prod.surfshark.com:1443
        run: |
          set -euo pipefail

          mkdir -p data
          ARGS=( --timezone "America/Toronto" --channel-id name -o data/amazon_ca.xml )

          # Optional UA / Referer
          if [ -n "${PV_USER_AGENT:-}" ]; then ARGS+=( --user-agent "$PV_USER_AGENT" ); fi
          if [ -n "${PV_REFERER:-}" ]; then ARGS+=( --referer "$PV_REFERER" ); fi

          # Cookie
          if [ -n "${PV_COOKIE:-}" ]; then
            ARGS+=( --cookie "$PV_COOKIE" )
          else
            echo "Warning: PV_COOKIE is empty; request may fail due to auth."
          fi

          # Set Canadian proxy
          export HTTP_PROXY="${PV_CA_PROXY}"
          export HTTPS_PROXY="${PV_CA_PROXY}"
          echo "Using Canadian proxy: ${PV_CA_PROXY}"

          # URLs
          if [ -z "${PV_LIVETV_URLS_CA:-}" ]; then
            echo "Missing secret PV_LIVETV_URLS_CA"; exit 1
          fi
          while IFS=$'\n' read -r url; do
            [ -z "$url" ] && continue
            ARGS+=( --url "$url" )
          done <<< "$PV_LIVETV_URLS_CA"

          # Run script
          python prime_livetv.py "${ARGS[@]}"

      - name: Create amazon_ca.xml.gz
        run: |
          set -euo pipefail
          rm -f data/amazon_ca.xml.gz
          gzip -9 -c data/amazon_ca.xml > data/amazon_ca.xml.gz
          ls -l data/amazon_ca.xml data/amazon_ca.xml.gz

      - name: Commit updated XMLTV files
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data/amazon_ca.xml data/amazon_ca.xml.gz
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update LiveTV XMLTV ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amazon-ca-livetv-xmltv
          path: |
            data/amazon_ca.xml
            data/amazon_ca.xml.gz
